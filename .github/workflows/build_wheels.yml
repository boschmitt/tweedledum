name: Build wheels

on:
  release:
    types:
      - published

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    env:
      CIBW_BEFORE_BUILD: python -m pip install --upgrade cmake ninja scikit-build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-18.04, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v2

    - uses: actions/setup-python@v2
      name: Install Python
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade cibuildwheel scikit-build
   
    - uses: ilammy/msvc-dev-cmd@v1.5.0
      if: startsWith(matrix.os, 'windows')

    - name: Build wheel for Windows 64
      if: startsWith(matrix.os, 'windows')
      env:
          CC: cl.exe
          CXX: cl.exe
          CIBW_SKIP: pp27-* cp27-* cp35-* *-win32
      run: |
        python -m cibuildwheel --output-dir wheelhouse

    - uses: ilammy/msvc-dev-cmd@v1.5.0
      if: startsWith(matrix.os, 'windows')
      with:
          arch: x86

    - name: Build wheel for Windows 32
      if: startsWith(matrix.os, 'windows')
      env:
          CC: cl.exe
          CXX: cl.exe
          CIBW_SKIP: pp27-* cp27-* cp35-* *-win_amd64
      run: |
        python -m cibuildwheel --output-dir wheelhouse

    - name: Build wheel for Linux
      if: startsWith(matrix.os, 'ubuntu')
      env:
          CIBW_SKIP: pp27-* cp27-* cp35-*
      run: |
        python -m cibuildwheel --output-dir wheelhouse
        python setup.py sdist --dist-dir=wheelhouse

    - name: Build wheel for MacOS 
      if: startsWith(matrix.os, 'macos')
      env:
          CIBW_SKIP: pp27-* cp27-* cp35-*
          MACOSX_DEPLOYMENT_TARGET: '10.15'
      run: |
        python -m cibuildwheel --output-dir wheelhouse

    - uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: wheelhouse
