name: Build dev wheels

on:
  workflow_dispatch:

jobs:
  setup_date:
    name: Setup version timestamp
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.date.outputs.now }}
    steps:
    - id: date 
      run: echo "::set-output name=now::$(date +'%Y%m%d%H%M')"

  build_sdist:
    name: Source distribution
    runs-on: ubuntu-latest
    needs: setup_date
    env:
      TWEEDLEDUM_DEV_VERSION: ${{needs.setup_date.outputs.timestamp}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade scikit-build

      - name: Build sdist
        run: |
          python setup.py sdist --dist-dir=wheelhouse

      - name: Upload built sdist
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./wheelhouse/*.tar.gz

  build_wheels:
    name: Wheels â€¢ ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    needs: setup_date
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-latest
          build: "cp3*-macosx_x86_64"
          name: macOS Intel (10.15)
          target: '10.15'
        - os: macos-latest
          build: "cp3*-macosx_x86_64"
          name: macOS Intel (10.9)
          target: '10.9'
        - os: macos-latest
          build: "cp3*-macosx_arm64"
          name: macOS Apple Silicon
        - os: macos-latest
          build: "cp3*-macosx_universal2"
          name: macOS Universal2
        - os: windows-latest
          build: "cp3*-win_amd64"
          name: Windows 64-bit
          arch: x64
        - os: windows-latest
          build: "cp3*-win32"
          name: Windows 32-bit
          arch: x86
        - os: ubuntu-latest
          build: "cp3*-manylinux_i686"
          name: Linux Intel 32-bit
        - os: ubuntu-latest
          build: "cp3*-manylinux_x86_64"
          name: Linux Intel 64-bit

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: ${{ matrix.arch }}

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.9

      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1.9.0
        if: runner.os == 'Windows'
        with:
            arch: ${{ matrix.arch }}

      - name: Set Windows variables
        if: runner.os == 'Windows'
        shell: bash
        run: |
          echo "CC=cl.exe" >> $GITHUB_ENV
          echo "CXX=cl.exe" >> $GITHUB_ENV

      - name: Set macOS 10.9 variables
        if: runner.os == 'macOS' && matrix.target == '10.9'
        shell: bash
        run: |
          echo "CC=gcc-10" >> $GITHUB_ENV
          echo "CXX=g++-10" >> $GITHUB_ENV
          echo "CXXFLAGS=-static-libgcc -static-libstdc++" >> $GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.0.0a3
        env:
          CIBW_BUILD: ${{ matrix.build }}
          CIBW_TEST_SKIP: cp*_arm64 cp*_universal2:arm64
          CIBW_ARCHS: all 
          CIBW_ENVIRONMENT: "TWEEDLEDUM_DEV_VERSION=${{needs.setup_date.outputs.timestamp}}"
          CIBW_TEST_COMMAND: python -m unittest discover -s {project}/python/test/ -t {project}
          CMAKE_BUILD_PARALLEL_LEVEL: 2
          MACOSX_DEPLOYMENT_TARGET: ${{ matrix.target }}

      - name: Upload built wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: ./wheelhouse/*.whl
